version: 2.1

executors:
  node20:
    docker:
      - image: cimg/node:20.10      # Primary container
      - image: cimg/mongo:6.0       # MongoDB service for backend
    working_directory: ~/project

commands:
  wait-for-http:
    description: "Wait for an HTTP endpoint to return 200"
    parameters:
      url:
        type: string
    steps:
      - run:
          name: "Wait for << parameters.url >>"
          command: |
            for i in $(seq 1 60); do
              STATUS=$(curl -s -o /dev/null -w "%{http_code}" "<< parameters.url >>" || true)
              if [ "$STATUS" = "200" ]; then
                echo "Endpoint is up"; exit 0
              fi
              echo "Waiting for service (got $STATUS)â€¦"
              sleep 2
            done
            echo "Service did not become ready in time"; exit 1

jobs:
  install-backend-deps:
    executor: node20
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-backend-deps-{{ checksum "secure-banking-backend/package-lock.json" }}
            - v1-backend-deps-
      - run:
          name: Install backend deps
          command: npm ci --prefix ./secure-banking-backend
      - save_cache:
          paths:
            - ./secure-banking-backend/node_modules
          key: v1-backend-deps-{{ checksum "secure-banking-backend/package-lock.json" }}

  # Optional: runs "npm test" if it exists; otherwise skips without failing CI
  test-backend:
    executor: node20
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-backend-deps-{{ checksum "secure-banking-backend/package-lock.json" }}
            - v1-backend-deps-
      - run:
          name: Run backend unit tests (skip if none)
          command: |
            cd secure-banking-backend
            if npm run -s test >/dev/null 2>&1; then
              npm test
            else
              echo "No unit tests defined; skipping."
            fi

  # Start API and run Newman against your Postman collection/env
  api-tests-newman:
    executor: node20
    environment:
      # Backend runtime configuration for CI
      PORT: "8080"
      MONGO_URI: "mongodb://localhost:27017/secure_banking"
      NODE_ENV: "test"
      JWT_SECRET: "ci-secret-jwt"
      FIELD_ENCRYPTION_KEY: "ci-field-encryption-key"
      PEPPER: "ci-pepper"
      CORS_ORIGIN: "http://localhost:5173"
      BCRYPT_COST: "10"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-backend-deps-{{ checksum "secure-banking-backend/package-lock.json" }}
            - v1-backend-deps-
      - run:
          name: Ensure Newman is available
          command: npm i -D newman newman-reporter-htmlextra --prefix ./secure-banking-backend
      - run:
          name: Start backend API (background)
          command: |
            cd secure-banking-backend
            node src/server.js &
            echo $! > ../api.pid
      - wait-for-http:
          url: "http://localhost:8080/api/health"
      - run:
          name: Run Newman collection
          command: |
            cd secure-banking-backend
            npx newman run ./tests/SecureBanking.postman_collection.json \
              -e ./tests/SecureBanking.local_environment.json \
              --reporters cli,htmlextra \
              --reporter-htmlextra-export ./newman/report.html \
              --bail
      - store_artifacts:
          path: secure-banking-backend/newman
          destination: newman-report
      - run:
          name: Stop backend API
          command: |
            if [ -f api.pid ]; then kill -9 $(cat api.pid) || true; fi

  install-frontend-deps:
    executor: node20
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-frontend-deps-{{ checksum "secure-banking-frontend/package-lock.json" }}
            - v1-frontend-deps-
      - run:
          name: Install frontend deps
          command: npm ci --prefix ./secure-banking-frontend
      - save_cache:
          paths:
            - ./secure-banking-frontend/node_modules
          key: v1-frontend-deps-{{ checksum "secure-banking-frontend/package-lock.json" }}

  build-frontend:
    executor: node20
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-frontend-deps-{{ checksum "secure-banking-frontend/package-lock.json" }}
            - v1-frontend-deps-
      - run:
          name: Build frontend
          command: npm run build --prefix ./secure-banking-frontend
      - store_artifacts:
          path: secure-banking-frontend/dist
          destination: frontend-dist

workflows:
  version: 2
  build-and-test:
    jobs:
      - install-backend-deps
      - test-backend:
          requires:
            - install-backend-deps
      - api-tests-newman:
          requires:
            - install-backend-deps
      - install-frontend-deps
      - build-frontend:
          requires:
            - install-frontend-deps
